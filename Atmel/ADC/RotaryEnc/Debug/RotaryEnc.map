Archive member included because of file (symbol)

c:/program files (x86)/atmel/atmel toolchain/avr8 gcc/native/3.4.1056/avr8-gnu-toolchain/bin/../lib/gcc/avr/4.8.1/avr5\libgcc.a(_exit.o)
                              c:/program files (x86)/atmel/atmel toolchain/avr8 gcc/native/3.4.1056/avr8-gnu-toolchain/bin/../lib/gcc/avr/4.8.1/../../../../avr/lib/avr5/crtm644p.o (exit)
c:/program files (x86)/atmel/atmel toolchain/avr8 gcc/native/3.4.1056/avr8-gnu-toolchain/bin/../lib/gcc/avr/4.8.1/avr5\libgcc.a(_copy_data.o)
                              rotaryenc.o (__do_copy_data)
c:/program files (x86)/atmel/atmel toolchain/avr8 gcc/native/3.4.1056/avr8-gnu-toolchain/bin/../lib/gcc/avr/4.8.1/avr5\libgcc.a(_clear_bss.o)
                              rotaryenc.o (__do_clear_bss)

Discarded input sections

 .bss           0x00000000        0x0 c:/program files (x86)/atmel/atmel toolchain/avr8 gcc/native/3.4.1056/avr8-gnu-toolchain/bin/../lib/gcc/avr/4.8.1/../../../../avr/lib/avr5/crtm644p.o
 .text          0x00000000        0x0 main.o
 .bss           0x00000000        0x0 main.o
 .text          0x00000000        0x0 rotaryenc.o
 .bss           0x00000000        0x0 rotaryenc.o
 .text.rtr_position
                0x00000000       0x78 rotaryenc.o
 .text.rtr_speed
                0x00000000       0x9c rotaryenc.o
 .text.rtr_speed_update
                0x00000000       0xb6 rotaryenc.o
 .bss.speed_flag_buff.1549
                0x00000000        0x1 rotaryenc.o
 .bss.speed_flag_one.1548
                0x00000000        0x1 rotaryenc.o
 .bss.speed_counter_one.1546
                0x00000000        0x2 rotaryenc.o
 .bss.speed_update_acc_one.1544
                0x00000000        0x2 rotaryenc.o
 .text          0x00000000        0x0 rtrlut.o
 .bss           0x00000000        0x0 rtrlut.o
 .text          0x00000000        0x0 timer.o
 .bss           0x00000000        0x0 timer.o
 .text          0x00000000        0x0 uart.o
 .bss           0x00000000        0x0 uart.o
 .text.get_ch   0x00000000       0x10 uart.o
 .text.uart_data
                0x00000000       0x10 uart.o
 .text          0x00000000        0x0 c:/program files (x86)/atmel/atmel toolchain/avr8 gcc/native/3.4.1056/avr8-gnu-toolchain/bin/../lib/gcc/avr/4.8.1/avr5\libgcc.a(_exit.o)
 .bss           0x00000000        0x0 c:/program files (x86)/atmel/atmel toolchain/avr8 gcc/native/3.4.1056/avr8-gnu-toolchain/bin/../lib/gcc/avr/4.8.1/avr5\libgcc.a(_exit.o)
 .text.libgcc.mul
                0x00000000        0x0 c:/program files (x86)/atmel/atmel toolchain/avr8 gcc/native/3.4.1056/avr8-gnu-toolchain/bin/../lib/gcc/avr/4.8.1/avr5\libgcc.a(_exit.o)
 .text.libgcc.div
                0x00000000        0x0 c:/program files (x86)/atmel/atmel toolchain/avr8 gcc/native/3.4.1056/avr8-gnu-toolchain/bin/../lib/gcc/avr/4.8.1/avr5\libgcc.a(_exit.o)
 .text.libgcc   0x00000000        0x0 c:/program files (x86)/atmel/atmel toolchain/avr8 gcc/native/3.4.1056/avr8-gnu-toolchain/bin/../lib/gcc/avr/4.8.1/avr5\libgcc.a(_exit.o)
 .text.libgcc.prologue
                0x00000000        0x0 c:/program files (x86)/atmel/atmel toolchain/avr8 gcc/native/3.4.1056/avr8-gnu-toolchain/bin/../lib/gcc/avr/4.8.1/avr5\libgcc.a(_exit.o)
 .text.libgcc.builtins
                0x00000000        0x0 c:/program files (x86)/atmel/atmel toolchain/avr8 gcc/native/3.4.1056/avr8-gnu-toolchain/bin/../lib/gcc/avr/4.8.1/avr5\libgcc.a(_exit.o)
 .text.libgcc.fmul
                0x00000000        0x0 c:/program files (x86)/atmel/atmel toolchain/avr8 gcc/native/3.4.1056/avr8-gnu-toolchain/bin/../lib/gcc/avr/4.8.1/avr5\libgcc.a(_exit.o)
 .text.libgcc.fixed
                0x00000000        0x0 c:/program files (x86)/atmel/atmel toolchain/avr8 gcc/native/3.4.1056/avr8-gnu-toolchain/bin/../lib/gcc/avr/4.8.1/avr5\libgcc.a(_exit.o)
 .text          0x00000000        0x0 c:/program files (x86)/atmel/atmel toolchain/avr8 gcc/native/3.4.1056/avr8-gnu-toolchain/bin/../lib/gcc/avr/4.8.1/avr5\libgcc.a(_copy_data.o)
 .bss           0x00000000        0x0 c:/program files (x86)/atmel/atmel toolchain/avr8 gcc/native/3.4.1056/avr8-gnu-toolchain/bin/../lib/gcc/avr/4.8.1/avr5\libgcc.a(_copy_data.o)
 .text.libgcc.mul
                0x00000000        0x0 c:/program files (x86)/atmel/atmel toolchain/avr8 gcc/native/3.4.1056/avr8-gnu-toolchain/bin/../lib/gcc/avr/4.8.1/avr5\libgcc.a(_copy_data.o)
 .text.libgcc.div
                0x00000000        0x0 c:/program files (x86)/atmel/atmel toolchain/avr8 gcc/native/3.4.1056/avr8-gnu-toolchain/bin/../lib/gcc/avr/4.8.1/avr5\libgcc.a(_copy_data.o)
 .text.libgcc   0x00000000        0x0 c:/program files (x86)/atmel/atmel toolchain/avr8 gcc/native/3.4.1056/avr8-gnu-toolchain/bin/../lib/gcc/avr/4.8.1/avr5\libgcc.a(_copy_data.o)
 .text.libgcc.prologue
                0x00000000        0x0 c:/program files (x86)/atmel/atmel toolchain/avr8 gcc/native/3.4.1056/avr8-gnu-toolchain/bin/../lib/gcc/avr/4.8.1/avr5\libgcc.a(_copy_data.o)
 .text.libgcc.builtins
                0x00000000        0x0 c:/program files (x86)/atmel/atmel toolchain/avr8 gcc/native/3.4.1056/avr8-gnu-toolchain/bin/../lib/gcc/avr/4.8.1/avr5\libgcc.a(_copy_data.o)
 .text.libgcc.fmul
                0x00000000        0x0 c:/program files (x86)/atmel/atmel toolchain/avr8 gcc/native/3.4.1056/avr8-gnu-toolchain/bin/../lib/gcc/avr/4.8.1/avr5\libgcc.a(_copy_data.o)
 .text.libgcc.fixed
                0x00000000        0x0 c:/program files (x86)/atmel/atmel toolchain/avr8 gcc/native/3.4.1056/avr8-gnu-toolchain/bin/../lib/gcc/avr/4.8.1/avr5\libgcc.a(_copy_data.o)
 .text          0x00000000        0x0 c:/program files (x86)/atmel/atmel toolchain/avr8 gcc/native/3.4.1056/avr8-gnu-toolchain/bin/../lib/gcc/avr/4.8.1/avr5\libgcc.a(_clear_bss.o)
 .bss           0x00000000        0x0 c:/program files (x86)/atmel/atmel toolchain/avr8 gcc/native/3.4.1056/avr8-gnu-toolchain/bin/../lib/gcc/avr/4.8.1/avr5\libgcc.a(_clear_bss.o)
 .text.libgcc.mul
                0x00000000        0x0 c:/program files (x86)/atmel/atmel toolchain/avr8 gcc/native/3.4.1056/avr8-gnu-toolchain/bin/../lib/gcc/avr/4.8.1/avr5\libgcc.a(_clear_bss.o)
 .text.libgcc.div
                0x00000000        0x0 c:/program files (x86)/atmel/atmel toolchain/avr8 gcc/native/3.4.1056/avr8-gnu-toolchain/bin/../lib/gcc/avr/4.8.1/avr5\libgcc.a(_clear_bss.o)
 .text.libgcc   0x00000000        0x0 c:/program files (x86)/atmel/atmel toolchain/avr8 gcc/native/3.4.1056/avr8-gnu-toolchain/bin/../lib/gcc/avr/4.8.1/avr5\libgcc.a(_clear_bss.o)
 .text.libgcc.prologue
                0x00000000        0x0 c:/program files (x86)/atmel/atmel toolchain/avr8 gcc/native/3.4.1056/avr8-gnu-toolchain/bin/../lib/gcc/avr/4.8.1/avr5\libgcc.a(_clear_bss.o)
 .text.libgcc.builtins
                0x00000000        0x0 c:/program files (x86)/atmel/atmel toolchain/avr8 gcc/native/3.4.1056/avr8-gnu-toolchain/bin/../lib/gcc/avr/4.8.1/avr5\libgcc.a(_clear_bss.o)
 .text.libgcc.fmul
                0x00000000        0x0 c:/program files (x86)/atmel/atmel toolchain/avr8 gcc/native/3.4.1056/avr8-gnu-toolchain/bin/../lib/gcc/avr/4.8.1/avr5\libgcc.a(_clear_bss.o)
 .text.libgcc.fixed
                0x00000000        0x0 c:/program files (x86)/atmel/atmel toolchain/avr8 gcc/native/3.4.1056/avr8-gnu-toolchain/bin/../lib/gcc/avr/4.8.1/avr5\libgcc.a(_clear_bss.o)

Memory Configuration

Name             Origin             Length             Attributes
text             0x00000000         0x00020000         xr
data             0x00800060         0x0000ffa0         rw !x
eeprom           0x00810000         0x00010000         rw !x
fuse             0x00820000         0x00000400         rw !x
lock             0x00830000         0x00000400         rw !x
signature        0x00840000         0x00000400         rw !x
user_signatures  0x00850000         0x00000400         rw !x
*default*        0x00000000         0xffffffff

Linker script and memory map

Address of section .data set to 0x800100
LOAD c:/program files (x86)/atmel/atmel toolchain/avr8 gcc/native/3.4.1056/avr8-gnu-toolchain/bin/../lib/gcc/avr/4.8.1/../../../../avr/lib/avr5/crtm644p.o
LOAD main.o
LOAD rotaryenc.o
LOAD rtrlut.o
LOAD timer.o
LOAD uart.o
START GROUP
LOAD c:/program files (x86)/atmel/atmel toolchain/avr8 gcc/native/3.4.1056/avr8-gnu-toolchain/bin/../lib/gcc/avr/4.8.1/../../../../avr/lib/avr5\libm.a
END GROUP
START GROUP
LOAD c:/program files (x86)/atmel/atmel toolchain/avr8 gcc/native/3.4.1056/avr8-gnu-toolchain/bin/../lib/gcc/avr/4.8.1/avr5\libgcc.a
LOAD c:/program files (x86)/atmel/atmel toolchain/avr8 gcc/native/3.4.1056/avr8-gnu-toolchain/bin/../lib/gcc/avr/4.8.1/../../../../avr/lib/avr5\libm.a
LOAD c:/program files (x86)/atmel/atmel toolchain/avr8 gcc/native/3.4.1056/avr8-gnu-toolchain/bin/../lib/gcc/avr/4.8.1/../../../../avr/lib/avr5\libc.a
END GROUP

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.text           0x00000000      0x4b0
 *(.vectors)
 .vectors       0x00000000       0x7c c:/program files (x86)/atmel/atmel toolchain/avr8 gcc/native/3.4.1056/avr8-gnu-toolchain/bin/../lib/gcc/avr/4.8.1/../../../../avr/lib/avr5/crtm644p.o
                0x00000000                __vector_default
                0x00000000                __vectors
 *(.vectors)
 *(.progmem.gcc*)
                0x0000007c                . = ALIGN (0x2)
                0x0000007c                __trampolines_start = .
 *(.trampolines)
 .trampolines   0x0000007c        0x0 linker stubs
 *(.trampolines*)
                0x0000007c                __trampolines_end = .
 *(.progmem*)
                0x0000007c                . = ALIGN (0x2)
 *(.jumptables)
 *(.jumptables*)
 *(.lowtext)
 *(.lowtext*)
                0x0000007c                __ctors_start = .
 *(.ctors)
                0x0000007c                __ctors_end = .
                0x0000007c                __dtors_start = .
 *(.dtors)
                0x0000007c                __dtors_end = .
 SORT(*)(.ctors)
 SORT(*)(.dtors)
 *(.init0)
 .init0         0x0000007c        0x0 c:/program files (x86)/atmel/atmel toolchain/avr8 gcc/native/3.4.1056/avr8-gnu-toolchain/bin/../lib/gcc/avr/4.8.1/../../../../avr/lib/avr5/crtm644p.o
                0x0000007c                __init
 *(.init0)
 *(.init1)
 *(.init1)
 *(.init2)
 .init2         0x0000007c        0xc c:/program files (x86)/atmel/atmel toolchain/avr8 gcc/native/3.4.1056/avr8-gnu-toolchain/bin/../lib/gcc/avr/4.8.1/../../../../avr/lib/avr5/crtm644p.o
 *(.init2)
 *(.init3)
 *(.init3)
 *(.init4)
 .init4         0x00000088       0x16 c:/program files (x86)/atmel/atmel toolchain/avr8 gcc/native/3.4.1056/avr8-gnu-toolchain/bin/../lib/gcc/avr/4.8.1/avr5\libgcc.a(_copy_data.o)
                0x00000088                __do_copy_data
 .init4         0x0000009e       0x10 c:/program files (x86)/atmel/atmel toolchain/avr8 gcc/native/3.4.1056/avr8-gnu-toolchain/bin/../lib/gcc/avr/4.8.1/avr5\libgcc.a(_clear_bss.o)
                0x0000009e                __do_clear_bss
 *(.init4)
 *(.init5)
 *(.init5)
 *(.init6)
 *(.init6)
 *(.init7)
 *(.init7)
 *(.init8)
 *(.init8)
 *(.init9)
 .init9         0x000000ae        0x8 c:/program files (x86)/atmel/atmel toolchain/avr8 gcc/native/3.4.1056/avr8-gnu-toolchain/bin/../lib/gcc/avr/4.8.1/../../../../avr/lib/avr5/crtm644p.o
 *(.init9)
 *(.text)
 .text          0x000000b6        0x4 c:/program files (x86)/atmel/atmel toolchain/avr8 gcc/native/3.4.1056/avr8-gnu-toolchain/bin/../lib/gcc/avr/4.8.1/../../../../avr/lib/avr5/crtm644p.o
                0x000000b6                __vector_22
                0x000000b6                __vector_28
                0x000000b6                __vector_1
                0x000000b6                __vector_24
                0x000000b6                __vector_12
                0x000000b6                __bad_interrupt
                0x000000b6                __vector_6
                0x000000b6                __vector_3
                0x000000b6                __vector_23
                0x000000b6                __vector_30
                0x000000b6                __vector_25
                0x000000b6                __vector_11
                0x000000b6                __vector_13
                0x000000b6                __vector_17
                0x000000b6                __vector_19
                0x000000b6                __vector_7
                0x000000b6                __vector_27
                0x000000b6                __vector_5
                0x000000b6                __vector_9
                0x000000b6                __vector_2
                0x000000b6                __vector_21
                0x000000b6                __vector_15
                0x000000b6                __vector_29
                0x000000b6                __vector_8
                0x000000b6                __vector_26
                0x000000b6                __vector_14
                0x000000b6                __vector_10
                0x000000b6                __vector_18
                0x000000b6                __vector_20
                0x000000ba                . = ALIGN (0x2)
 *(.text.*)
 .text.main     0x000000ba       0x10 main.o
                0x000000ba                main
 .text.rot_init
                0x000000ca       0x54 rotaryenc.o
                0x000000ca                rot_init
 .text.__vector_4
                0x0000011e       0x86 rotaryenc.o
                0x0000011e                __vector_4
 .text.rtr_value
                0x000001a4        0x4 rotaryenc.o
                0x000001a4                rtr_value
 .text.rtr_qpos
                0x000001a8       0x70 rotaryenc.o
                0x000001a8                rtr_qpos
 .text.rtr_buff_update
                0x00000218      0x15c rotaryenc.o
                0x00000218                rtr_buff_update
 .text.rtr_intrpt
                0x00000374       0x58 rotaryenc.o
                0x00000374                rtr_intrpt
 .text.timer_init
                0x000003cc       0x12 timer.o
                0x000003cc                timer_init
 .text.__vector_16
                0x000003de       0x48 timer.o
                0x000003de                __vector_16
 .text.uart_init
                0x00000426       0x18 uart.o
                0x00000426                uart_init
 .text.uart_tx  0x0000043e       0x10 uart.o
                0x0000043e                uart_tx
 .text.uart_str
                0x0000044e       0x1e uart.o
                0x0000044e                uart_str
 .text.uart_number
                0x0000046c       0x40 uart.o
                0x0000046c                uart_number
                0x000004ac                . = ALIGN (0x2)
 *(.fini9)
 .fini9         0x000004ac        0x0 c:/program files (x86)/atmel/atmel toolchain/avr8 gcc/native/3.4.1056/avr8-gnu-toolchain/bin/../lib/gcc/avr/4.8.1/avr5\libgcc.a(_exit.o)
                0x000004ac                _exit
                0x000004ac                exit
 *(.fini9)
 *(.fini8)
 *(.fini8)
 *(.fini7)
 *(.fini7)
 *(.fini6)
 *(.fini6)
 *(.fini5)
 *(.fini5)
 *(.fini4)
 *(.fini4)
 *(.fini3)
 *(.fini3)
 *(.fini2)
 *(.fini2)
 *(.fini1)
 *(.fini1)
 *(.fini0)
 .fini0         0x000004ac        0x4 c:/program files (x86)/atmel/atmel toolchain/avr8 gcc/native/3.4.1056/avr8-gnu-toolchain/bin/../lib/gcc/avr/4.8.1/avr5\libgcc.a(_exit.o)
 *(.fini0)
                0x000004b0                _etext = .

.data           0x00800100       0xda load address 0x000004b0
                0x00800100                PROVIDE (__data_start, .)
 *(.data)
 .data          0x00800100        0x0 c:/program files (x86)/atmel/atmel toolchain/avr8 gcc/native/3.4.1056/avr8-gnu-toolchain/bin/../lib/gcc/avr/4.8.1/../../../../avr/lib/avr5/crtm644p.o
 .data          0x00800100        0x0 main.o
 .data          0x00800100        0x0 rotaryenc.o
 .data          0x00800100        0x0 rtrlut.o
 .data          0x00800100        0x0 timer.o
 .data          0x00800100        0x0 uart.o
 .data          0x00800100        0x0 c:/program files (x86)/atmel/atmel toolchain/avr8 gcc/native/3.4.1056/avr8-gnu-toolchain/bin/../lib/gcc/avr/4.8.1/avr5\libgcc.a(_exit.o)
 .data          0x00800100        0x0 c:/program files (x86)/atmel/atmel toolchain/avr8 gcc/native/3.4.1056/avr8-gnu-toolchain/bin/../lib/gcc/avr/4.8.1/avr5\libgcc.a(_copy_data.o)
 .data          0x00800100        0x0 c:/program files (x86)/atmel/atmel toolchain/avr8 gcc/native/3.4.1056/avr8-gnu-toolchain/bin/../lib/gcc/avr/4.8.1/avr5\libgcc.a(_clear_bss.o)
 *(.data*)
 .data.tmp_two  0x00800100        0x1 rotaryenc.o
 .data.tmp_one  0x00800101        0x1 rotaryenc.o
 *(.rodata)
 *(.rodata*)
 .rodata.str1.1
                0x00800102       0x57 rotaryenc.o
                                 0x59 (size before relaxing)
 .rodata.rtrlut
                0x00800159       0x80 rotaryenc.o
 *(.gnu.linkonce.d*)
                0x008001da                . = ALIGN (0x2)
 *fill*         0x008001d9        0x1 
                0x008001da                _edata = .
                0x008001da                PROVIDE (__data_end, .)

.bss            0x008001da      0x2cb
                0x008001da                PROVIDE (__bss_start, .)
 *(.bss)
 *(.bss*)
 .bss.buff_two.1554
                0x008001da        0x1 rotaryenc.o
 .bss.buff_one.1553
                0x008001db        0x1 rotaryenc.o
 .bss.two_bpos  0x008001dc        0x1 rotaryenc.o
 .bss.one_bpos  0x008001dd        0x1 rotaryenc.o
 .bss.cbuf_two_dif
                0x008001de       0x96 rotaryenc.o
 .bss.cbuf_two  0x00800274       0x4b rotaryenc.o
 .bss.cbuf_one_dif
                0x008002bf       0x96 rotaryenc.o
 .bss.cbuf_one  0x00800355       0x4b rotaryenc.o
 .bss.sel       0x008003a0        0x1 rotaryenc.o
 .bss.rtr_pos_two
                0x008003a1        0x1 rotaryenc.o
 .bss.waiting_two
                0x008003a2        0x1 rotaryenc.o
 .bss.rtr_pos_one
                0x008003a3        0x1 rotaryenc.o
 .bss.waiting_one
                0x008003a4        0x1 rotaryenc.o
 .bss.rtrlut_fast
                0x008003a5      0x100 rotaryenc.o
 *(COMMON)
                0x008004a5                PROVIDE (__bss_end, .)
                0x000004b0                __data_load_start = LOADADDR (.data)
                0x0000058a                __data_load_end = (__data_load_start + SIZEOF (.data))

.noinit         0x008004a5        0x0
                0x008004a5                PROVIDE (__noinit_start, .)
 *(.noinit*)
                0x008004a5                PROVIDE (__noinit_end, .)
                0x008004a5                _end = .
                0x008004a5                PROVIDE (__heap_start, .)

.eeprom         0x00810000        0x0
 *(.eeprom*)
                0x00810000                __eeprom_end = .

.fuse
 *(.fuse)
 *(.lfuse)
 *(.hfuse)
 *(.efuse)

.lock
 *(.lock*)

.signature
 *(.signature*)

.user_signatures
 *(.user_signatures*)

.stab
 *(.stab)

.stabstr
 *(.stabstr)

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment        0x00000000       0x30
 *(.comment)
 .comment       0x00000000       0x30 main.o
                                 0x31 (size before relaxing)
 .comment       0x00000000       0x31 rotaryenc.o
 .comment       0x00000000       0x31 rtrlut.o
 .comment       0x00000000       0x31 timer.o
 .comment       0x00000000       0x31 uart.o

.note.gnu.build-id
 *(.note.gnu.build-id)

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges  0x00000000       0xf0
 *(.debug_aranges)
 .debug_aranges
                0x00000000       0x20 main.o
 .debug_aranges
                0x00000020       0x60 rotaryenc.o
 .debug_aranges
                0x00000080       0x28 timer.o
 .debug_aranges
                0x000000a8       0x48 uart.o

.debug_pubnames
 *(.debug_pubnames)

.debug_info     0x00000000      0x866
 *(.debug_info .gnu.linkonce.wi.*)
 .debug_info    0x00000000       0xc7 main.o
 .debug_info    0x000000c7      0x556 rotaryenc.o
 .debug_info    0x0000061d       0xb1 timer.o
 .debug_info    0x000006ce      0x198 uart.o

.debug_abbrev   0x00000000      0x445
 *(.debug_abbrev)
 .debug_abbrev  0x00000000       0x89 main.o
 .debug_abbrev  0x00000089      0x209 rotaryenc.o
 .debug_abbrev  0x00000292       0x88 timer.o
 .debug_abbrev  0x0000031a      0x12b uart.o

.debug_line     0x00000000      0x44c
 *(.debug_line .debug_line.* .debug_line_end)
 .debug_line    0x00000000       0x60 main.o
 .debug_line    0x00000060      0x1fb rotaryenc.o
 .debug_line    0x0000025b        0x0 rtrlut.o
 .debug_line    0x0000025b       0xcf timer.o
 .debug_line    0x0000032a      0x122 uart.o

.debug_frame    0x00000000      0x264
 *(.debug_frame)
 .debug_frame   0x00000000       0x24 main.o
 .debug_frame   0x00000024      0x13c rotaryenc.o
 .debug_frame   0x00000160       0x7c timer.o
 .debug_frame   0x000001dc       0x88 uart.o

.debug_str      0x00000000      0x354
 *(.debug_str)
 .debug_str     0x00000000      0x12e main.o
                                0x167 (size before relaxing)
 .debug_str     0x0000012e      0x1e3 rotaryenc.o
                                0x324 (size before relaxing)
 .debug_str     0x00000311        0x0 rtrlut.o
 .debug_str     0x00000311       0x19 timer.o
                                0x16a (size before relaxing)
 .debug_str     0x0000032a       0x2a uart.o
                                0x189 (size before relaxing)

.debug_loc      0x00000000      0x5b5
 *(.debug_loc)
 .debug_loc     0x00000000      0x3c3 rotaryenc.o
 .debug_loc     0x000003c3       0xcb timer.o
 .debug_loc     0x0000048e      0x127 uart.o

.debug_macinfo
 *(.debug_macinfo)

.debug_weaknames
 *(.debug_weaknames)

.debug_funcnames
 *(.debug_funcnames)

.debug_typenames
 *(.debug_typenames)

.debug_varnames
 *(.debug_varnames)

.debug_pubtypes
 *(.debug_pubtypes)

.debug_ranges   0x00000000       0xe0
 *(.debug_ranges)
 .debug_ranges  0x00000000       0x10 main.o
 .debug_ranges  0x00000010       0x80 rotaryenc.o
 .debug_ranges  0x00000090       0x18 timer.o
 .debug_ranges  0x000000a8       0x38 uart.o

.debug_macro
 *(.debug_macro)
OUTPUT(RotaryEnc.elf elf32-avr)
LOAD linker stubs
